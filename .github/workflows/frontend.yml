# .github/workflows/frontend.yml

name: Build and Test Frontend

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Determine if client/ directory has changes
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            client:
              - 'client/**'

      # 3. Skip Frontend CI if no changes in client/
      - name: Skip Frontend CI
        if: steps.filter.outputs.client != 'true'
        run: echo "No changes in client/, skipping Frontend CI."

      # 4. Continue only if client/ has changes
      - name: Set up Node.js
        if: steps.filter.outputs.client == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node.js modules
        if: steps.filter.outputs.client == 'true'
        uses: actions/cache@v3
        with:
          path: ./client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.filter.outputs.client == 'true'
        working-directory: ./client
        run: npm install

      - name: Run Linting
        if: steps.filter.outputs.client == 'true'
        working-directory: ./client
        run: npm run lint

      - name: Run Frontend Tests
        if: steps.filter.outputs.client == 'true'
        working-directory: ./client
        run: npm test -- --ci --reporters=default

      - name: Build Frontend Docker Image
        if: steps.filter.outputs.client == 'true'
        working-directory: ./client
        run: docker build -t frontend:latest .

      - name: Run Frontend Docker Container
        if: steps.filter.outputs.client == 'true'
        run: docker run -d -p 3000:80 --name frontend_test frontend:latest

      - name: Tear Down Frontend Docker Container
        if: always()
        run: docker rm -f frontend_test || true