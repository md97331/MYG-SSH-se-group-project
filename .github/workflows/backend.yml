name: Build and Test Backend

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Filter for changes in server directory
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            server:
              - 'server/**'

      # 3. Skip Backend CI if no changes in server/
      - name: Skip Backend CI
        if: steps.filter.outputs.server != 'true'
        run: echo "No changes in server/, skipping Backend CI."

      # 4. Start Docker Compose if server/ has changes
      - name: Start Docker Compose
        if: steps.filter.outputs.server == 'true'
        run: docker-compose -f docker-compose.yml up -d --build

      # 5. Wait for Database to be Healthy
      - name: Wait for Database to be Healthy
        if: steps.filter.outputs.server == 'true'
        run: |
          for i in {1..30}; do
            status=$(docker inspect --format='{{.State.Health.Status}}' $(docker ps --filter "name=db" -q))
            if [ "$status" == "healthy" ]; then
              echo "Database is healthy"
              exit 0
            fi
            echo "Waiting for database to be healthy..."
            sleep 5
          done
          echo "Database did not become healthy in time."
          exit 1

      # 6. Run Backend Tests
      - name: Run Backend Tests
        if: steps.filter.outputs.server == 'true'
        run: docker exec flask pytest /app/tests

      # 7. Tear Down Docker Compose
      - name: Tear Down
        if: always()
        run: docker-compose -f docker-compose.yml down